package LoginDemo;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class forgotPasswordPage {

    forgotPasswordPage() {
        JFrame forgotFrame = new JFrame("Forgot Password");
        forgotFrame.setSize(400, 350);
        forgotFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        forgotFrame.setLayout(null);

        JPanel panel = new JPanel();
        panel.setBounds(0, 0, 400, 350);
        panel.setBackground(new Color(165, 36, 59));
        panel.setLayout(null);
        forgotFrame.add(panel);

        JLabel title = new JLabel("RESET PASSWORD");
        title.setFont(new Font("Arial", Font.BOLD, 20));
        title.setForeground(Color.WHITE);
        title.setBounds(90, 30, 250, 30);
        panel.add(title);

        JLabel userLabel = new JLabel("USERNAME:");
        userLabel.setForeground(Color.WHITE);
        userLabel.setBounds(40, 90, 100, 25);
        panel.add(userLabel);

        JTextField userField = new JTextField();
        userField.setBounds(150, 90, 180, 25);
        panel.add(userField);

        JLabel passLabel = new JLabel("NEW PASSWORD:");
        passLabel.setForeground(Color.WHITE);
        passLabel.setBounds(40, 130, 120, 25);
        panel.add(passLabel);

        JPasswordField passField = new JPasswordField();
        passField.setBounds(150, 130, 180, 25);
        panel.add(passField);

        JButton updateButton = new JButton("UPDATE PASSWORD");
        updateButton.setBounds(100, 180, 180, 30);
        updateButton.setBackground(new Color(245, 232, 215));
        panel.add(updateButton);

        JButton backButton = new JButton("BACK TO LOGIN");
        backButton.setBounds(120, 230, 150, 30);
        backButton.setBackground(new Color(245, 232, 215));
        panel.add(backButton);

        // ----------------------------
        // Update Password Button Logic
        // ----------------------------
        updateButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String username = userField.getText().trim();
                String newPassword = new String(passField.getPassword());

                if (username.isEmpty() || newPassword.isEmpty()) {
                    JOptionPane.showMessageDialog(forgotFrame,
                            "⚠️ Please enter username and new password!",
                            "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                String url = "jdbc:mysql://localhost:3306/gym_fit";
                String dbUsername = "root";
                String dbPassword = "";

                Connection conn = null;
                PreparedStatement pstCheck = null;
                PreparedStatement pstUpdate = null;
                ResultSet rs = null;

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    conn = DriverManager.getConnection(url, dbUsername, dbPassword);

                    // Check if user exists
                    String checkSql = "SELECT * FROM users WHERE username = ?";
                    pstCheck = conn.prepareStatement(checkSql);
                    pstCheck.setString(1, username);
                    rs = pstCheck.executeQuery();

                    if (rs.next()) {
                        // Update password
                        String updateSql = "UPDATE users SET password = ? WHERE username = ?";
                        pstUpdate = conn.prepareStatement(updateSql);
                        pstUpdate.setString(1, newPassword);
                        pstUpdate.setString(2, username);
                        pstUpdate.executeUpdate();

                        JOptionPane.showMessageDialog(forgotFrame,
                                "✅ Password Updated Successfully!",
                                "Success", JOptionPane.INFORMATION_MESSAGE);

                        forgotFrame.dispose();
                        new LoginDemo(); // redirect back to login
                    } else {
                        JOptionPane.showMessageDialog(forgotFrame,
                                "❌ Username not found!",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(forgotFrame,
                            "Database Error: " + ex.getMessage(),
                            "Error", JOptionPane.ERROR_MESSAGE);
                } finally {
                    try {
                        if (rs != null) rs.close();
                        if (pstCheck != null) pstCheck.close();
                        if (pstUpdate != null) pstUpdate.close();
                        if (conn != null) conn.close();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });

        // ----------------------------
        // Back to Login Button
        // ----------------------------
        backButton.addActionListener(e -> {
            forgotFrame.dispose();
            new LoginDemo();
        });
        

        forgotFrame.setVisible(true);
    }
}
